(function(window,angular,undefined){"use strict";angular.module("vm.utils",[]).directive("placeholder",["$timeout",function($timeout){return{restrict:"A",require:"?ngModel",link:function(scope,element,attrs,ngModelCtrl){if("placeholder"in document.createElement("input")){return}var placeholderClass="vm-utils-placeholder-polyfill",placeholderText,isDisplayed=false,isElementFocused=false,elementForm=element[0].form?angular.element(element[0].form):undefined,isPasswordInput=function(){var type=element.prop("type");return type&&type.toLowerCase()==="password"}(),placeholderElement=isPasswordInput?function createPasswordPlaceholder(){var substituteElement=angular.element('<input type="text" />');Object.keys(attrs.$attr).forEach(function(attrKey){if(attrKey==="ngModel"||attrKey==="type"||attrKey==="placeholder"||attrKey==="value"){return}if(element.attr(attrs.$attr[attrKey]).match(/{{.*}}/)){attrs.$observe(attrKey,function(){substituteElement.attr(attrKey,element.attr(attrKey))})}else{substituteElement.attr(attrKey,element.attr(attrKey))}});substituteElement.addClass(placeholderClass);element.after(substituteElement);return substituteElement}():element,elementDisplayValue=element.css("display"),updatePlaceholderValue=function updatePlaceholderValue(){if(isDisplayed){$timeout(function(){placeholderElement.val(placeholderText)})}},hidePlaceholder=function hidePlaceholder(){if(isPasswordInput){element.css("display",elementDisplayValue);placeholderElement.css("display","none");element[0].focus()}if(isDisplayed){element.val("")}element.removeClass(placeholderClass);isDisplayed=false},showPlaceholder=function showPlaceholder(formReset){if(!isDisplayed&&!isElementFocused&&!element.val()||formReset){if(isPasswordInput){elementDisplayValue=element.css("display");element.css("display","none");placeholderElement.css("display",elementDisplayValue)}element.addClass(placeholderClass);isDisplayed=true}updatePlaceholderValue()},vmUtilsFormSubmitHandler=function vmUtilsFormSubmitHandler(){hidePlaceholder();placeholderElement.remove()},vmUtilsFormResetHandler=showPlaceholder.bind(null,true),bindEventListeners=function bindEventListeners(){placeholderElement.on("focus",function(){isElementFocused=true;hidePlaceholder()});element.on("blur",function(){isElementFocused=false;showPlaceholder()});if(elementForm){elementForm.on("submit",vmUtilsFormSubmitHandler);elementForm.on("reset",vmUtilsFormResetHandler)}},unbindEventListeners=function unbindEventListeners(){if(isPasswordInput){placeholderElement.remove()}if(elementForm){elementForm.off("submit",vmUtilsFormSubmitHandler);elementForm.off("reset",vmUtilsFormResetHandler)}},init=function init(){placeholderText=attrs.placeholder;$timeout(function(){attrs.$observe("placeholder",function(newValue){placeholderText=newValue;showPlaceholder()})});if(ngModelCtrl){ngModelCtrl.$formatters.push(function(modelValue){if(modelValue){$timeout(hidePlaceholder)}else{$timeout(showPlaceholder)}return modelValue})}bindEventListeners();scope.$on("$destroy",unbindEventListeners)};init()}}}])})(window,window.angular);
//# sourceMappingURL=dist/vmUtils.min.js.map